{"version":3,"sources":["components/Avatar.js","components/BtnBar.js","components/Detail.js","App.js","index.js"],"names":["CuAvatar","props","userData","avatar","c","name","this","size","src","slice","React","Component","BtnBar","sendLike","Notification","open","title","customMsg","likeMsg","content","duration","icon","style","color","window","location","contact","punch","punchMsg","sendNotice","supportMsg","state","accomplished","show","className","theme","type","borderRadius","onClick","offWorkTime","Date","getHours","nextProps","Detail","echarts","TitleComponent","that","lchart","document","querySelector","jsonp","languageApi","error","data","console","log","forEach","item","value","percent","setOption","text","left","top","textStyle","fontSize","series","avoidLabelOverlap","radius","label","position","emphasis","labelLine","fontWeight","resize","height","echart","editorApi","isOpen","keepDOM","marginTop","span","margin","id","App","setState","showDetail","config","workingData","key","goal","wakatimeApi","_data","grand_total","total_seconds","toFixed","hours","row","textAlign","wakatimeLanguage","wakatimeEditor","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.368b69aa.chunk.js","sourcesContent":["/**\r\n * @author 季悠然\r\n * @date 2021-12-06\r\n */\r\nimport React from 'react';\r\nimport { Avatar } from '@douyinfe/semi-ui';\r\n\r\nclass CuAvatar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.userData = {\r\n            avatar: props.c.avatar,\r\n            name: props.c.name\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.userData.avatar !== '' ? <Avatar size={\"large\"} src={this.userData.avatar}/> : <Avatar size={\"large\"}>{this.userData.name.slice(0,1)}</Avatar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CuAvatar;","/**\r\n * @author 季悠然\r\n * @date 2021-12-07\r\n */\r\nimport React from 'react';\r\nimport {Button, Notification} from \"@douyinfe/semi-ui\";\r\nimport {IconBolt, IconLikeHeart, IconLikeThumb, IconTriangleUp, IconCheckboxTick} from \"@douyinfe/semi-icons\";\r\n\r\nclass BtnBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.c = props.c;\r\n        this.state = {\r\n            accomplished: props.accomplished\r\n        };\r\n        this.show = props.show;\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n        const {accomplished} = nextProps;\r\n        return {\r\n            accomplished,\r\n        };\r\n    }\r\n\r\n    sendLike = () => {\r\n        Notification.open({\r\n            title: this.c.customMsg.likeMsg[0],\r\n            content: this.c.customMsg.likeMsg[1],\r\n            duration: 3,\r\n            icon: <IconLikeHeart style={{color: \"red\"}}/>\r\n        });\r\n        window.location = \"mailto:\" + this.c.contact + \"?subject=今天也辛苦啦&body=今天已经很努力啦，放松一下吧~\";\r\n    }\r\n\r\n    punch = () => {\r\n        Notification.open({\r\n            title: this.c.customMsg.punchMsg[0],\r\n            content: this.c.customMsg.punchMsg[1],\r\n            duration: 3,\r\n        });\r\n        window.location = \"mailto:\" + this.c.contact + \"?subject=还在摸鱼？&body=今日事今日毕！快点起床！\";\r\n    }\r\n\r\n    sendNotice = () => {\r\n        Notification.open({\r\n            title: this.c.customMsg.supportMsg[0],\r\n            content: this.c.customMsg.supportMsg[1],\r\n            duration: 3,\r\n        });\r\n        window.location = \"mailto:\" + this.c.contact + \"?subject=加油！&body=坚持就是胜利！\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"BtnBar\">\r\n                {this.state.accomplished ?\r\n                    <Button theme='solid' type='primary' size={\"large\"} style={{borderRadius: \"1000rem\"}}\r\n                            onClick={this.sendLike}\r\n                            icon={\r\n                                <IconLikeThumb/>}>表扬一下！</Button> : (this.c.offWorkTime < new Date().getHours()) ?\r\n                        <Button theme='solid' type='danger' size={\"large\"} style={{borderRadius: \"1000rem\"}}\r\n                                onClick={this.punch}\r\n                                icon={<IconBolt/>}>还敢摸鱼？加班！</Button> :\r\n                        <Button theme='solid' type='primary' size={\"large\"} onClick={this.sendNotice}\r\n                                style={{borderRadius: \"1000rem\"}} icon={<IconTriangleUp/>}>给他加加油</Button>}\r\n\r\n                <Button theme='solid' type=\"primary\" size={\"large\"}\r\n                        style={{borderRadius: \"1000rem\"}} icon={<IconCheckboxTick/>} onClick={this.show} className={\"btn\"}>\r\n                    都干了些啥？\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BtnBar;","/**\r\n * @author 季悠然\r\n * @date 2021-12-07\r\n */\r\nimport React from 'react';\r\nimport {Collapsible, Card, Row, Col} from '@douyinfe/semi-ui';\r\nimport * as echarts from 'echarts/lib/echarts';\r\nimport { TitleComponent } from 'echarts/components';\r\nimport 'echarts/lib/chart/pie';\r\nimport jsonp from \"jsonp\";\r\n\r\nclass Detail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        echarts.use([TitleComponent]);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let that = this;\r\n        this.lchart = echarts.init(document.querySelector('#chart-language'));\r\n        jsonp(this.props.languageApi, null, (error, data) => {\r\n            if (error) console.log(error)\r\n            else {\r\n                data.data.forEach(item => {\r\n                    item.value = item.percent;\r\n                })\r\n                that.lchart.setOption({\r\n                    title: {\r\n                        text: '写的啥',\r\n                        left: 'auto',\r\n                        top: 'auto',\r\n                        textStyle: {\r\n                            fontSize: \"0.875rem\"\r\n                        }\r\n                    },\r\n                    series: [\r\n                        {\r\n                            type: 'pie',\r\n                            avoidLabelOverlap: false,\r\n                            radius: ['60%', '80%'],\r\n                            label: {\r\n                                show: false,\r\n                                position: 'center',\r\n                                emphasis: {\r\n                                    show: true\r\n                                }\r\n                            },\r\n                            labelLine: {\r\n                                show: false\r\n                            },\r\n                            emphasis: {\r\n                                label: {\r\n                                    show: true,\r\n                                    fontSize: '30',\r\n                                    fontWeight: 'bold'\r\n                                }\r\n                            },\r\n                            data: data.data\r\n                        }\r\n                    ]\r\n                });\r\n            }\r\n            this.lchart.resize({\r\n                height: 150\r\n            });\r\n        });\r\n\r\n        this.echart = echarts.init(document.querySelector('#chart-editor'));\r\n        jsonp(this.props.editorApi, null, (error, data) => {\r\n            if (error) console.log(error)\r\n            else {\r\n                data.data.forEach(item => {\r\n                    item.value = item.percent;\r\n                })\r\n                that.echart.setOption({\r\n                    title: {\r\n                        text: '用的啥',\r\n                        left: 'auto',\r\n                        top: 'auto',\r\n                        textStyle: {\r\n                            fontSize: \"0.875rem\"\r\n                        }\r\n                    },\r\n                    series: [\r\n                        {\r\n                            type: 'pie',\r\n                            avoidLabelOverlap: false,\r\n                            radius: ['60%', '80%'],\r\n                            label: {\r\n                                show: false,\r\n                                position: 'center',\r\n                                emphasis: {\r\n                                    show: true\r\n                                }\r\n                            },\r\n                            labelLine: {\r\n                                show: false\r\n                            },\r\n                            emphasis: {\r\n                                label: {\r\n                                    show: true,\r\n                                    fontSize: '30',\r\n                                    fontWeight: 'bold'\r\n                                }\r\n                            },\r\n                            data: data.data\r\n                        }\r\n                    ]\r\n                });\r\n            }\r\n            this.echart.resize({\r\n                height: 150\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Detail\">\r\n                <Collapsible isOpen={this.props.isOpen} keepDOM={true}>\r\n                    <Row style={{marginTop: \"1rem\"}}>\r\n                        <Col span={12}>\r\n                            <Card style={{margin: \"1rem\"}}>\r\n                                <div id=\"chart-language\"></div>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Card style={{margin: \"1rem\"}}>\r\n                                <div id=\"chart-editor\"></div>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Collapsible>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport './App.css';\r\nimport config from './config/config.json';\r\nimport CuAvatar from \"./components/Avatar\";\r\nimport BtnBar from \"./components/BtnBar\";\r\nimport Detail from \"./components/Detail\";\r\nimport {Descriptions} from '@douyinfe/semi-ui';\r\nimport jsonp from 'jsonp';\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.c = config;\r\n        this.state = {\r\n            workingData: [\r\n                {\r\n                    key: \"今日代码时长\",\r\n                    value: \"loading\"\r\n                },\r\n                {\r\n                    key: \"目标时长\",\r\n                    value: this.c.goal\r\n                },\r\n                {\r\n                    key: \"完成度\",\r\n                    value: \"loading\"\r\n                },\r\n                {\r\n                    key: \"总结\",\r\n                    value: \"loading\"\r\n                }\r\n            ],\r\n            accomplished: false,\r\n            showDetail: false\r\n        };\r\n        document.title = \"今天\" + this.c.name + \"摸鱼了吗\";\r\n    }\r\n\r\n    show = () => {\r\n        this.setState({\r\n            showDetail: !this.state.showDetail\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        jsonp(this.c.wakatimeApi, null, (error, data) => {\r\n            if (error) console.log(error)\r\n            else {\r\n                let _data = data.data[6].grand_total;\r\n                this.setState({\r\n                    workingData: [\r\n                        {\r\n                            key: \"今日代码时长\",\r\n                            value: _data.text\r\n                        },\r\n                        {\r\n                            key: \"目标时长\",\r\n                            value: this.c.goal + 'hrs'\r\n                        },\r\n                        {\r\n                            key: \"完成度\",\r\n                            value: (_data.total_seconds / (this.c.goal * 3600) * 100).toFixed(2) + \"%\"\r\n                        },\r\n                        {\r\n                            key: \"总结\",\r\n                            value: (this.c.goal > _data.hours) ? (this.c.offWorkTime < new Date().getHours()) ? (\r\n                                <span style={{color: \"#DD4A68\"}}>摸鱼了</span>) : \"还在奋斗\" : \"好耶！\"\r\n                        }\r\n                    ],\r\n                    accomplished: this.c.goal <= _data.hours\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"App\">\r\n                    <header>\r\n                        <h2><CuAvatar c={this.c}/><br/>今天{this.c.name}摸鱼了吗？</h2>\r\n                        <Descriptions data={this.state.workingData} row style={{textAlign: \"right\"}}/>\r\n                        <Detail isOpen={this.state.showDetail} languageApi={this.c.wakatimeLanguage} editorApi={this.c.wakatimeEditor}/>\r\n                        <BtnBar c={this.c} accomplished={this.state.accomplished} show={this.show}/>\r\n                    </header>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css/normalize.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}